#!/bin/bash
set -e
set -o pipefail

RUBY_VERSION=2.1.6
CHEF_BOOTSTRAP=12.4.9
CHEF_BUNDLE='~> 12.4.0'

FILE_VAULT=/var/chef/tmp
USER=$(whoami)
: ${HOME:="/Users/$USER"}

log() {
  echo "----> $*"
}

if ! xcode-select -p >/dev/null 2>&1; then
  log 'Install xcode command line tools (click "Install")'
  xcode-select --install
fi

brew_installed=$(brew --version 2>/dev/null)
case "$brew_installed" in
  "")
    log 'Installing Homebrew'
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    ;;
  *)
    log 'Updating Homebrew'
    brew update || true
    brew upgrade || true
    ;;
esac

log 'Install packages with Homebrew Bundler'
brew tap Homebrew/bundle
brew bundle

installed_ruby=$(ruby --version | cut -d' ' -f2 | sed 's/p.*//')
rbenv_global=$(rbenv global 2>/dev/null | sed 's/-.*//')
if [ "$installed_ruby" != "$rbenv_global" ]; then
  if [ "$installed_ruby" != "$RUBY_VERSION" ]; then
    log "Installing ruby $RUBY_VERSION"
    rbenv install "$RUBY_VERSION"
  fi
  log "Setting global ruby to $RUBY_VERSION"
  rbenv global "$RUBY_VERSION"
fi

log 'Installing bundler'
gem install bundler
rbenv rehash
tmpfile=$(mktemp)
cat >"$tmpfile" <<EOF
source 'https://rubygems.org'

gem 'chef', '$CHEF_BUNDLE'
EOF
bundle install --gemfile="$tmpfile"

if [ ! -f "$HOME/.ssh/github-key" ]; then
  echo '----> Create ssh-key'
  if [ ! -d "$HOME/.ssh" ]; then
    mkdir -v "$HOME/.ssh"
    chmod 0700 "$HOME/.ssh"
  fi
  ssh-keygen -t rsa -N '' -f "$HOME/.ssh/github-key" -C "$USER@lumoslabs"
fi

if [ ! -d ~/workspace/chef-data-bags ]; then
  echo '----> Clone data-bags repo & install dependencies'
  git clone git@github.com:lumoslabs/chef-data-bags ~/workspace/chef-data-bags
else
  echo '----> Update data-bags repo'
  pushd ~/workspace/chef-data-bags >/dev/null
  git fetch --all
  git merge --ff-only @{u}
  popd >/dev/null
fi
pushd ~/workspace/chef-data-bags >/dev/null
bundle install
popd >/dev/null

#TODO: add github-key to users github account?

echo '----> Writing memory executable to bin/'
tee ~/bin/memory <<EOF
#!/bin/bash
# specify bundle_gemfile to speed up load times
BUNDLE_GEMFILE="$HOME/workspace/chef-data-bags/Gemfile" bundle exec ruby $HOME/workspace/chef-data-bags/bin/memory \$*
EOF
chmod +x ~/bin/memory

echo '----> Writing up-to-date knife.rb file'
tee ~/.chef/knife.rb <<EOF
chef_dir        = "#{ENV['HOME']}/.chef"
chef_repo       = "#{ENV['HOME']}/workspace/chef-repo"
chef_server_url = ENV['CHEF_SERVER_URL'] || "https://chef-aws.lumoslabs.com/organizations/lumoslabs"

cache_type               "BasicFile"
chef_server_url          chef_server_url
client_key               "#{chef_dir}/$USER"
cache_options            path: "#{chef_dir}/checksums"
cookbook_copyright       "Lumos Labs, Inc."
cookbook_email           "ops@lumoslabs.com"
cookbook_path            ["#{chef_repo}/cookbooks"]
data_bag_path            "#{ENV['HOME']}/workspace/chef-data-bags/data_bags"
data_bag_encrypt_version 2
log_level                :info
log_location             STDOUT
node_name                "$USER"
role_path                ["#{chef_repo}/roles"]
trusted_certs_dir        "#{chef_dir}/trusted_certs"
validation_client_name   'lumoslabs-validator'
validation_key           "#{chef_dir}/validation.pem"
verify_api_cert          false
versioned_cookbooks      true

knife[:editor]                = 'vim'
knife[:bootstrap_version]     = '$CHEF_BOOTSTRAP'
knife[:secret_file]           = "#{chef_dir}/memory.key"
knife[:aws_access_key_id]     = ENV['AWS_ACCESS_KEY_ID']
knife[:aws_secret_access_key] = ENV['AWS_SECRET_ACCESS_KEY']
knife[:region]                = 'us-east-1'
EOF

echo '----> Copy chef key files to ~/.chef'
for file in memory.key validation.pem "$USER.pem"; do
  #TODO: /var/chef may go away, check more places
  if [ -f "${FILE_VAULT}/${file}" ]; then
    cp /var/chef/tmp/$file $HOME/.chef/
    rm -fr /var/chef/tmp/$file
  else
    echo "*** WARNING: Unable to find $file, contact IT!"
  fi
done

echo '----> Create chef user'
#FIXME: Matt is working on updating memory to accept files for creating data bags!
