#!/bin/bash
set -e
set -o pipefail

RUBY_VERSION=2.1.6
CHEF_VERSION=12.9.41

USER=$(whoami)
: ${HOME:="/Users/$USER"}

# Don't run as sudo
if [[ $EUID -eq 0 ]]; then
  echo "ERROR: Don't run as sudo"
  exit 1
fi

echo '----> Creating ~/.bash_profile'
tee ~/.bash_profile <<EOF
if [ -f ~/.bashrc ]; then
  . ~/.bashrc
fi

# Customizations can be placed into ~/.bash_profile_includes/ with a .sh extension
for file in ~/.bash_profile_includes/*.sh; do
  [[ -r $file ]] && source $file;
done
EOF
chmod 644 ~/.bash_profile

echo '----> Creating ~/.bash_profile_includes/defaults.sh'
mkdir -p ~/.bash_profile_includes
tee ~/.bash_profile_includes/defaults.sh <<EOF
export PATH=$HOME/bin:/usr/local/bin:$PATH

alias ll='ls -lhA'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias reset_dns='sudo killall -HUP mDNSResponder'

# alias over knife to make it faster
alias knifef="BUNDLE_GEMFILE=~/workspace/dotfiles/Gemfile bundle exec knife"

function knives() {
  if [ -z "$2" ]
  then knifef ssh "$1" "hostname" -x lumoslabs -a hostname | sort
  else knifef ssh "$1" "$2" -x lumoslabs -a hostname | sort
  fi
}
EOF
chmod 755 ~/.bash_profile_includes/defaults.sh

echo '----> Installing xcode command line tools (click "Install")'
xcode-select --install || true

echo '----> Installing Homebrew'
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" || true
# brew install rcmdnk/file/brew-file
# brew file set_repo --repo lumoslabs/dotfiles
brew tap Homebrew/bundle
brew bundle
# brew file install

echo '----> Installing ruby $RUBY_VERSION'
rbenv install $RUBY_VERSION
rbenv global $RUBY_VERSION
gem install bundler
rbenv rehash

if [ ! -f "$HOME/.ssh/github-key" ]; then
  echo '----> Create ssh-key'
  mkdir -v "$HOME/.ssh"
  chmod 0700 "$HOME/.ssh"
  ssh-keygen -t rsa -N '' -f "$HOME/.ssh/github-key" -C "$USER@lumoslabs"
fi

if [ ! -d ~/workspace/chef-data-bags ]; then
  echo '----> Cloning data-bags repo & install dependencies'
  git clone git@github.com:lumoslabs/chef-data-bags ~/workspace/chef-data-bags
else
  echo '----> Updating data-bags repo'
  pushd ~/workspace/chef-data-bags >/dev/null
  git fetch --all
  git merge --ff-only @{u}
  popd >/dev/null
fi
pushd ~/workspace/chef-data-bags >/dev/null
bundle install
popd >/dev/null

#TODO: add github-key to users github account?

echo '----> Writing memory executable to bin/'
tee ~/bin/memory <<EOF
#!/bin/bash
# specify bundle_gemfile to speed up load times
BUNDLE_GEMFILE="$HOME/workspace/chef-data-bags/Gemfile" bundle exec ruby $HOME/workspace/chef-data-bags/bin/memory \$*
EOF
chmod +x ~/bin/memory

echo '----> Writing up-to-date knife.rb file'
tee ~/.chef/knife.rb <<EOF
chef_dir        = "#{ENV['HOME']}/.chef"
chef_repo       = "#{ENV['HOME']}/workspace/chef-repo"
chef_server_url = ENV['CHEF_SERVER_URL'] || "https://chef-aws.lumoslabs.com/organizations/lumoslabs"

cache_type               "BasicFile"
chef_server_url          chef_server_url
client_key               "#{chef_dir}/$USER"
cache_options            path: "#{chef_dir}/checksums"
cookbook_copyright       "Lumos Labs, Inc."
cookbook_email           "ops@lumoslabs.com"
cookbook_path            ["#{chef_repo}/cookbooks"]
data_bag_path            "#{ENV['HOME']}/workspace/chef-data-bags/data_bags"
data_bag_encrypt_version 2
log_level                :info
log_location             STDOUT
node_name                "$USER"
role_path                ["#{chef_repo}/roles"]
trusted_certs_dir        "#{chef_dir}/trusted_certs"
validation_client_name   "lumoslabs-validator"
validation_key           "#{chef_dir}/validation.pem"
verify_api_cert          false
versioned_cookbooks      true

knife[:editor]                = 'vim'
knife[:bootstrap_version]     = "$CHEF_VERSION"
knife[:secret_file]           = "#{chef_dir}/memory.key"
knife[:aws_access_key_id]     = ENV['AWS_ACCESS_KEY_ID']
knife[:aws_secret_access_key] = ENV['AWS_SECRET_ACCESS_KEY']
knife[:region]                = 'us-east-1'
EOF

echo '----> Copy chef key files to ~/.chef'
for file in memory.key validation.pem "$USER.pem"; do
  #TODO: /var/chef may go away, check more places
  cp /var/chef/tmp/$file $HOME/.chef/
  rm -fr /var/chef/tmp/$file
done

echo '----> Create chef user'
#FIXME: Matt is working on updating memory to accept files for creating data bags!
